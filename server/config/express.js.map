{"version":3,"sources":["config/express.js"],"names":["app","env","process","NODE_ENV","use","express","static","path","join","config","root","set","engine","require","renderFile","bodyParser","urlencoded","extended","json","req","res","next","header","passport","initialize","error","send"],"mappings":";;;;;;kBAqBe,UAAUA,GAAV,EAAe;AAC5B,QAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAxB;;AAEA,MAAIF,QAAQ,aAAR,IAAyBA,QAAQ,MAArC,EAA6C;AAC3CD,QAAII,GAAJ,CAAQC,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,sBAAOC,IAAjB,EAAuB,MAAvB,CAAf,CAAR;AACAV,QAAII,GAAJ,CAAQ,qBAAR;AACD;;AAED,MAAIH,QAAQ,YAAZ,EAA0B;AACxB;AACAD,QAAII,GAAJ,CAAQ,qBAAR;AACD;;AAGDJ,MAAIW,GAAJ,CAAQ,OAAR,EAAkB,GAAEF,sBAAOC,IAAK,eAAhC;AACAV,MAAIY,MAAJ,CAAW,MAAX,EAAmBC,QAAQ,KAAR,EAAeC,UAAlC;AACAd,MAAIW,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACAX,MAAII,GAAJ,CAAQ,4BAAR;AACAJ,MAAII,GAAJ,CAAQW,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAjB,MAAII,GAAJ,CAAQW,qBAAWG,IAAX,EAAR;AACAlB,MAAII,GAAJ,CAAQ,+BAAR;AACAJ,MAAII,GAAJ,CAAQ,CAACe,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1BD,QAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,6CAA3C;AACAF,QAAIE,MAAJ,CAAW,+BAAX,EAA4C,eAA5C;AACAD;AACD,GALD;AAMArB,MAAII,GAAJ,CAAQ,6BAAR;AACAJ,MAAII,GAAJ,CAAQmB,mBAASC,UAAT,EAAR;AACAxB,MAAII,GAAJ,CAAQ,CAACqB,KAAD,EAAQN,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,KAA2B;AACjCD,QAAIM,IAAJ,CAAS,4BAAT,EAAuC,GAAvC;AACD,GAFD;;AAIA,MAAIzB,QAAQ,aAAR,IAAyBA,QAAQ,MAArC,EAA6C;AAC3CD,QAAII,GAAJ,CAAQ,6BAAR,EAD2C,CAClB;AAC1B;AACF,C;;AArDD;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AAEA","file":"express.js","sourcesContent":["/**\n * Express configuration\n */\n\nimport express from 'express';\nimport favicon from 'serve-favicon';\n\nimport compression from 'compression';\nimport bodyParser from 'body-parser';\nimport methodOverride from 'method-override';\nimport cookieParser from 'cookie-parser';\nimport errorHandler from 'errorhandler';\nimport path from 'path';\nimport cors from 'cors';\n\n\nimport passport from 'passport';\n\nimport config from './environment';\n\n\nexport default function (app) {\n  const env = process.env.NODE_ENV;\n\n  if (env === 'development' || env === 'test') {\n    app.use(express.static(path.join(config.root, '.tmp')));\n    app.use(cors());\n  }\n\n  if (env === 'production') {\n    //app.use(favicon(path.join(config.root, 'client', 'favicon.ico')));\n    app.use(cors());\n  }\n\n\n  app.set('views', `${config.root}/server/views`);\n  app.engine('html', require('ejs').renderFile);\n  app.set('view engine', 'html');\n  app.use(compression());\n  app.use(bodyParser.urlencoded({ extended: false }));\n  app.use(bodyParser.json());\n  app.use(methodOverride());\n  app.use((req, res, next) => {\n    res.header('Access-Control-Allow-Origin', '*');\n    res.header('Access-Control-Allow-Headers', 'Origin, Authorization, Content-Type, Accept');\n    res.header('Access-Control-Expose-Headers', 'Authorization');\n    next();\n  });\n  app.use(cookieParser());\n  app.use(passport.initialize());\n  app.use((error, req, res, next) => {\n    res.send('500: Internal Server Error', 500);\n  });\n\n  if (env === 'development' || env === 'test') {\n    app.use(errorHandler()); // Error handler - has to be last\n  }\n}\n"]}