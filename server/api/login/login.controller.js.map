{"version":3,"sources":["api/login/login.controller.js"],"names":["index","req","res","condition","$or","email","body","userName","mobileNo","password","User","findOne","__v","then","user","console","log","jwt","sign","process","env","JWT_SECKERT_KEY","err","token","status","json","success","message","data","setHeader","catch"],"mappings":";;;;;QAMgBA,K,GAAAA,K;;AANhB;;;;AAEA;;AACA;;;;;;AAEA;AACO,SAASA,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyB;AAC9B,QAAMC,YAAY;AAChBC,SAAK,CACH,EAAEC,OAAOJ,IAAIK,IAAJ,CAASC,QAAlB,EADG,EAEH,EAAEC,UAAUP,IAAIK,IAAJ,CAASC,QAArB,EAFG,CADW;AAIhBE,cAAU,sBAAOR,IAAIK,IAAJ,CAASG,QAAhB;AAJM,GAAlB;AAMA,SAAOC,eAAKC,OAAL,CAAaR,SAAb,EAAwB,EAAEM,UAAU,CAAZ,EAAeG,KAAK,CAApB,EAAxB,EAAiDC,IAAjD,CAAuDC,IAAD,IAAU;AACrEC,YAAQC,GAAR,CAAYF,IAAZ;AACA,QAAIA,IAAJ,EAAU;AACRG,6BAAIC,IAAJ,CAAS,EAAEJ,IAAF,EAAT,EAAmBK,QAAQC,GAAR,CAAYC,eAA/B,EAAgD,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9D,YAAID,GAAJ,EAAS;AACP,iBAAOpB,IAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,sBAA3B,EAAmDC,MAAM,EAAzD,EAA6DN,GAA7D,EAArB,CAAP;AACD;AACDpB,YAAI2B,SAAJ,CAAc,eAAd,EAA+BN,KAA/B;AACA,eAAOrB,IAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,IAAX,EAAiBC,SAAS,oBAA1B,EAAgDC,MAAMd,IAAtD,EAArB,CAAP;AACD,OAND;AAOD,KARD,MAQO;AACL,aAAOZ,IAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,iCAA3B,EAA8DC,MAAM3B,IAAIK,IAAxE,EAArB,CAAP;AACD;AACD,WAAO,IAAP;AACD,GAdM,EAcJwB,KAdI,CAcGR,GAAD,IAAS;AAChBP,YAAQC,GAAR,CAAYM,GAAZ;AACA,WAAOpB,IAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,sBAA3B,EAAmDC,MAAM,EAAzD,EAArB,CAAP;AACD,GAjBM,CAAP;AAkBD","file":"login.controller.js","sourcesContent":["import jwt from 'jsonwebtoken';\n\nimport { decode } from '../register/register.controller';\nimport User from '../register/user.model';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function index(req, res) {\n  const condition = {\n    $or: [\n      { email: req.body.userName },\n      { mobileNo: req.body.userName }],\n    password: decode(req.body.password),\n  };\n  return User.findOne(condition, { password: 0, __v: 0 }).then((user) => {\n    console.log(user);\n    if (user) {\n      jwt.sign({ user }, process.env.JWT_SECKERT_KEY, (err, token) => {\n        if (err) {\n          return res.status(500).json({ success: false, message: 'Something went wrong', data: '', err });\n        }\n        res.setHeader('Authorization', token);\n        return res.status(200).json({ success: true, message: 'Login Successfully', data: user });\n      });\n    } else {\n      return res.status(200).json({ success: false, message: 'Incorrect Username and Password', data: req.body });\n    }\n    return true;\n  }).catch((err) => {\n    console.log(err);\n    return res.status(500).json({ success: false, message: 'Something went wrong', data: '' });\n  });\n}\n"]}