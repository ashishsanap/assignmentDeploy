{"version":3,"sources":["api/register/register.controller.js"],"names":["decode","index","value","key","crypto","createCipher","process","env","CRYPTO_ALGO","SECRET_KEY","password","update","final","req","res","keys","body","includes","User","create","then","user","console","log","status","json","success","message","data","catch","err","errmsg"],"mappings":";;;;;;;;;;QAMgBA,M,GAAAA,M;QAOAC,K,GAAAA,K;;AAZhB;;;;AAEA;;;;;;AAHA;AAMO,SAASD,MAAT,CAAgBE,KAAhB,EAAuB;AAC5B,QAAMC,MAAMC,iBAAOC,YAAP,CAAoBC,QAAQC,GAAR,CAAYC,WAAhC,EAA6CF,QAAQC,GAAR,CAAYE,UAAzD,CAAZ,CAD4B,CACqD;AACjF,MAAIC,WAAWP,IAAIQ,MAAJ,CAAWT,KAAX,EAAkB,MAAlB,EAA0B,KAA1B,CAAf;AACAQ,cAAYP,IAAIS,KAAJ,CAAU,KAAV,CAAZ;AACA,SAAOF,QAAP;AACD;AACD;AACO,SAAST,KAAT,CAAeY,GAAf,EAAoBC,GAApB,EAAyB;AAC9B,QAAMC,OAAO,oBAAYF,IAAIG,IAAhB,CAAb;AACA,MAAID,KAAKE,QAAL,CAAc,OAAd,KAA0BF,KAAKE,QAAL,CAAc,UAAd,CAA1B,IAAuDF,KAAKE,QAAL,CAAc,UAAd,CAA3D,EAAsF;AACpFJ,QAAIG,IAAJ,CAASN,QAAT,GAAoBV,OAAOa,IAAIG,IAAJ,CAASN,QAAhB,CAApB;AACAQ,mBAAKC,MAAL,CAAYN,IAAIG,IAAhB,EAAsBI,IAAtB,CAA4BC,IAAD,IAAU;AACnCC,cAAQC,GAAR,CAAYF,IAAZ;AACA,aAAOP,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,IAAX,EAAiBC,SAAS,8BAA1B,EAA0DC,MAAMP,IAAhE,EAArB,CAAP;AACD,KAHD,EAGGQ,KAHH,CAGUC,GAAD,IAAS;AAChB,UAAIA,IAAIC,MAAJ,CAAWd,QAAX,CAAoB,WAApB,CAAJ,EAAsC;AACpC,eAAOH,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS,yBAFiB;AAG1BC,gBAAM;AAHoB,SAArB,CAAP;AAKD;AACD,aAAOd,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,sBAA3B,EAAmDC,MAAM,EAAzD,EAA6DE,GAA7D,EAArB,CAAP;AACD,KAZD;AAaD,GAfD,MAeO;AACL,WAAOhB,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,0BAA3B,EAAuDC,MAAM,EAA7D,EAArB,CAAP;AACD;AACF","file":"register.controller.js","sourcesContent":["/* eslint-disable consistent-return,max-len,no-param-reassign */\nimport crypto from 'crypto';\n\nimport User from './user.model';\n\n\nexport function decode(value) {\n  const key = crypto.createCipher(process.env.CRYPTO_ALGO, process.env.SECRET_KEY);// abc replace by some data\n  let password = key.update(value, 'utf8', 'hex');\n  password += key.final('hex');\n  return password;\n}\n// eslint-disable-next-line import/prefer-default-export\nexport function index(req, res) {\n  const keys = Object.keys(req.body);\n  if (keys.includes('email') && keys.includes('mobileNo') && keys.includes('password')) {\n    req.body.password = decode(req.body.password);\n    User.create(req.body).then((user) => {\n      console.log(user);\n      return res.status(201).json({ success: true, message: 'Account Created Successfully', data: user });\n    }).catch((err) => {\n      if (err.errmsg.includes('duplicate')) {\n        return res.status(409).json({\n          success: false,\n          message: 'Account Already Present',\n          data: 'Email or Mobile Number already register',\n        });\n      }\n      return res.status(500).json({ success: false, message: 'Something Went wrong', data: '', err });\n    });\n  } else {\n    return res.status(406).json({ success: false, message: 'You Miss some parameters', data: '' });\n  }\n}\n\n"]}