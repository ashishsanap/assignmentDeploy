{"version":3,"sources":["auth/auth.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"auth.service.js","sourcesContent":["// /* eslint-disable max-len, import/prefer-default-export */\n// import jwt from 'jsonwebtoken';\n//\n// const redisClient = require('../config/redis').redisClient;\n//\n//\n// /**\n//  * Attaches the user object to the request if authenticated\n//  * Otherwise returns 403\n//  */\n//\n// export function isAuthenticated(req, res, next) {\n//   const bearerHeader = req.header('Authorization');\n//   if (typeof bearerHeader !== 'undefined') {\n//     const bearer = bearerHeader.split(' ');\n//     const bearerToken = bearer[1];\n//     req.token = bearerToken;\n//     jwt.verify(req.token, process.env.JWT_SECKERT_KEY, (err, authData) => {\n//       if (err || typeof authData === 'undefined') {\n//         res.status(403).json({ success: false, msg: 'Unauthorised access3' });\n//       } else {\n//         redisClient.get(`R${authData.user.PM_Client_MobileNumber}`, (err, reply) => {\n//           console.log(reply);\n//           if (err) {\n//             res.status(403).json({ success: false, msg: 'Unauthorised access2' });\n//           } else if (reply === req.token) {\n//             redisClient.set(`R${authData.user.PM_Client_MobileNumber}`, `${req.token}`);\n//             // redisClient.expire(`R${authData.user.PM_User_MobileNumber}`, process.env.IDEL_SESSION_TIME); // session time\n//             req.authData = authData.user;\n//             return next();\n//           } else {\n//             console.log(reply);\n//             res.status(403).json({ success: false, msg: 'Unauthorised access1' });\n//           }\n//         });\n//       }\n//     });\n//   } else {\n//     res.status(403).json({ success: false, msg: 'Unauthorised access4' });\n//   }\n//   // });\n// }\n"]}